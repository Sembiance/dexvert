/--------------\
| TOP Priority |
\--------------/
* Support version 2.0 using the actual extract exe: http://fileformats.archiveteam.org/wiki/Logitech_Compress

* Figure out how to extract the bink/smacker videos: https://discmaster.textfiles.com/browse/36350/EXE_7.ISO/Video
  https://discmaster.textfiles.com/search?b3sum=efd36ee62c586ea4181ed14edf8d75ff221708751cc0895a74ca59e95bc0d40e
  sandbox/app/radTools/ has some tools that in theory you can use to extract, but it didn't work with the files I tested
  MAYBE this tool can do it: https://www.zeus-software.com/downloads/xripper

* Use exiftool to get CompanyName, ProductVersion, Comments, and other fields from formats: exe, dll, etc.
  Store this as meta info. Make sure to update injest/phase/phase4.js and ensure this gets stored into textContent
  Then upload SOME of these to item #7 and reprocess and try searching for it, make sure it can find them: https://discmaster.textfiles.com/search?b3sum=efd36ee62c586ea4181ed14edf8d75ff221708751cc0895a74ca59e95bc0d40e
  Write a script that can go and get this data and update the WebDB file and update the index.jsonl file and update elastic
  It'll go as "content" 
  Targeted so it'll do a paginated elastic search for the target formats, run on discmaster2 server the exiftool, insert the data
  Use an 'agentpool' of course.
  Also make this fairly 'generic' or provide 'helpers' for both the paginated search (which is similar to deepfind kinda)
  but also helpers for updating webdb, the index.jsonl for the given fileid and also the elastic entry too

* Using the above now inserted data, with format 'exe' selected, search for content that is likely a bink/smacker video
  Also these: https://discmaster.textfiles.com/search?b3sum=efd36ee62c586ea4181ed14edf8d75ff221708751cc0895a74ca59e95bc0d40e
  And finally create the code that can do 'targeted' reprocessing of files. It's time to do it.

* Consider adding 'type' to all uses of "sox" in order to tighten things up a bit. Would want to run full dexdrone10 test suite before AND after

* Fix garbage degas low res? https://discmaster.textfiles.com/browse/35046/PC%20Actual%20CD%2053.iso/Juegos/Alice/alice_demo.exe/demo/pak0.pk3/textures/natural

* Create a way to launch an installer in winxp or something in QEMU, run the installer (so autoit is installed to help) then shutdown the system, extract the disk drive image and compare the files and use that as the output:
  Will need a way to vnc into these 'while' running to debug of course
  First, WISE installers: https://discmaster.textfiles.com/view/35001/cyberaction.iso/DATA/INSTALLS/WIN/CYBERACTION%20INSTALL/Install_Viewer.exe?details
  Second, figure out how to 'detect/find' these files better then go test on a TON of them until they all work
  Once working, reply on #discmaster textfiles to eintei that it's been solved and things will be reprocesed over time to handle these
  BEFORE I start re-processing potentially thousands of CDs, find more installers.
  First, look at the list of 'installers' in exe.js and ones that seem to be more 'common' start looking at those.
  Then, manually go through items, #1, #2, #2, #4 and run more installers. Might need a way to quicky launch my extractor QEMU with a downloaded .iso file
  Then I can run the installer in the native environment and see how it is set up, figure out if I can 'detect' them and support them
  Finally, only after I've done like a TON of common installers, now reprocess items as needed to support these.
  It *might* be wise to tackle the hard problem now of partial re-processing, partial re-injestion and partial re-indexing. Maybe. That sounds tricky and error prone and dangerous, so if I skip on that now, I'll never do it likely.

* archive/installerVISE: Could run a mac emulator in a virtualX, then via x11vnc programmatically scrape video, send keyboard inputs and mouse clicks. Can thus launch an emulator with the vise starting up automatically and clicking to install then doing a hard drive "diff" afterwards and finding any newly created files. Never sure exactly what versions of macos the vise will be compatible with, so may need different emulators with different hard drives and versions..also may need different oreindtalled software requisites like wuicktime, etc. Would just try one after another and keep fixing and adding support. See documents/dev/macos.txt for emulators
  Other MacOS installers to target in a similar way:
	Smaller Installer: https://discmaster.textfiles.com/browse/34905/HolyGrail%206.zip/HolyGrail%206/Gamez/Chaos%20Overlords%201.0.sit/Chaos%20Overlords%201.0.image/Install%20Chaos%20Overlords/Install%20Chaos%20Overlords.rsrc

* Since updating gimp, now all layers are flattened and exported. This means image/gimpAnimatedBrush has them on top of another
  Should add an option to gimp program and script to 'seperateLayers' that will make multiple output images per layer
  Don't do this for all formats, since in several cases a simple flattening is the best course of action

* Several audio/speex samples are a bit distorted. See if this can be fixed.


/---------------\
| High Priority |
\---------------/
* Between thet 'os' stats and the 'AgentPool' status, I should be able to build a nice little website tool that can show 'live' stats about what's going on and cumulative stats about what's taken long, what's been run too many times, etc Not sure if this should be done 'through' dexdaemon or if it should be like an ssh reverse proxy thing or dunno. Would need to think about it some more. Maybe not a high priority at all

* Replacing 86box with qemu could help a lot at improving speeds by freeing up CPU usage. BUT would likely require re-setting up every program on both win2k and winxp, which is likely 2 full days of work, at least.

* Consider getting an EPYC from ioflood with FAST nvme and FAST RAM and run some comparisons without any changes. Possible to save money if an EPYC costs like 2x or 3x but gives like 4x performance.

* Get support added to the various archive/mmfwArchive sub-formats. Maybe wumimg or deark could take on the Pictures variety
  Would be useful if I could see what the pictures are, at the very least by running the programs and taking some screenshots
  This might be a good one to use: https://discmaster.textfiles.com/browse/13330/Highlights%20Hidden%20Pictures%20Workshop.iso/pc/hidpics.pic

* If a dexvert process crashes (such as wineSelfExtractor (can be caused by doing path.relative(r.wineTreeRootDirPath, undefined) in pre())) while a lock is held, then the lock is never released. When I call /lock it should also require an some sort of 'agentid' and I'll need to add a 'crashcb' option and call in AgentPool.exitHandler and then in the parent dexrpc? I need to handle that crash and then remove any locks belonging to that agentid

* Add support for Basic .MUS. This is a bit of work and should be done 'for fun'. See sandbox/wip/BasicMUS_mml2mid.js

* Add extraction suport for these older MacroMind Projector files (21,000+ unique files). No known converter or extractor:
	https://discmaster.textfiles.com/search?qfields=name&detection=macroMindProjector
	https://discmaster.textfiles.com/search?qfields=name&detection=VWMD
	https://discmaster.textfiles.com/search?qfields=name&detection=MMDR
	https://discmaster.textfiles.com/search?qfields=name&detection=MMPB
	https://discmaster.textfiles.com/search?qfields=name&detection=DG06&strict=strict
  History of this program:
	https://www.lingoworkshop.com/articles/history
	https://macromedia.fandom.com/wiki/MacroMind_VideoWorks
	https://macromedia.fandom.com/wiki/MacroMind
  Could start with VideoWorks on an infinite mac, create some sample output files: https://macintoshgarden.org/apps/videoworks
  Then add 'detection' then figure out how to 'extract' the text, audio, images from within the output files.
  Then move to Video Works 2, Macromind Director, etc

* Pay someone to reverse engineer and build an extracter for the 7,600+ unique Mac Installer VISE packages: https://discmaster.textfiles.com/search?formatid=installerVISE&dedup=dedup
  http://discmaster.textfiles.com/browse/4161/Miami%20Dolphins%20Cheerleaders%201998.iso/mac/Install/Install%20ScreenSaver
  I started it in ~/bin/unVISEInstaller.js based on this info: https://pastebin.com/GwQYz2gG
  Also found: https://github.com/habnabit/delvmod/wiki/Installer_VISE
  Both of those links I archived in sandbox/wip/installerVISE
  But there were too many differences and I'm not the best at reverse engineering so I stopped for now.
  To help with this, I could install VISE and MAKE some very basic installers and reverse engineer what is produced:
	https://macintoshgarden.org/apps/developer-vise-3
	https://macintoshgarden.org/apps/installer-vise-601

* Figure out how to get info out of an infobase folio database. Some interesting stuff locked in those:
  https://discmaster.textfiles.com/search?format=folioDatabase
  May be worth paying someone to reverse engineer it

* Figure out how to extract archive/stackerCompressedVolume as these may be stacker:
	https://discmaster.textfiles.com/search?family=unknown&sizeMin=20MB&detection=535441434b4552*&dedup=dedup
	https://archive.org/details/cdrinc_IMSS_Jefatura_de_Servicios_de_Afiliacion_Catalogo_Region_1


/-----------------\
| Medium Priority |
\-----------------/
* Improve font handling. Have it so it must always produce either a bitmap or vector font file and then discmaster can make a thumbnail of that in injest step and maybe add a slightly more robust (showing all chars) view-font page
  I could in theory "split" apart images generated by things like recoil2png, deark and imagemagick into something I can process into a bitmap font file
  Additionally I could then reliably record ino meta how many 'glyphs' are in each font using something like: ttfdump TREK.TTF | ag numGlyphs
  Then this could be searched upon in discmaster with '# of <glyphs>'

* Update blender from 4.0 to latest version (4.4 as of May 2025)
  First, starting with Blender 4.2, the addons that were distributed may not be anymore: https://devtalk.blender.org/t/changes-to-add-on-and-themes-bundling-4-2-onwards/34593
  Next, the Python API has changed with every version, so my python code (and possibly all the addons which I manually updated to even work with 4.0) will need to be update:
	https://developer.blender.org/docs/release_notes/4.1/python_api/
	https://developer.blender.org/docs/release_notes/4.2/python_api/
	https://developer.blender.org/docs/release_notes/4.3/python_api/
	https://developer.blender.org/docs/release_notes/4.4/python_api/
  It's probably best to just jump to the latest version.
	cd /mnt/compendium/DevLab/dexvert
	mv blender blender_OLD
	mkdir -p blender/addons/
  FIRST: The 'native' support (collada/obj/ply/stl)
  	Test them VISUALLY with: BLENDER_USER_SCRIPTS=/mnt/compendium/DevLab/dexvert/blender blender-?.?
  	Once they all work, take the program/poly/blender.js python code and hand craft a script to test with against
  	Get that working CLI with the args seen in blender.js
  	NOW update blender.js with this new python script and then test and get working that one addon in dexvert for all native formats
  SECOND: Blender specific addons (3ds/dxf/fbx/x3d) see if they are distributed in the 'addons_core' folder or if I need to get them from: http://extensions.blender.org/
	Get each one working VISUALLY.
	Then update blender.js with the necessary code and get them working with dexvert
  THIRD: 3rd party addons
	For each one look to see if there is an 'updated' or 'alternatve' plugin that supports it from: http://extensions.blender.org/  or github, etc
	If no, then rsync over from dexvert/blender_OLD/addons/<addon> to blender/addons/<addon>/
	Then update the addon code as needed to get it working VISUALLY with blender
	Then test it with dexvert
	Then proceed to the next addon
  FINALLY: Do a full testdexvert with all of poly

* So dexvert still uses 7z from p7zip (instead of more modern 7zz from 7zip package). This is because p7zip handles i18n charsets better via the LANG env var
  The problem is that I've encountered a file test/sample/archive/zip/Masicsstory.zip that when extracted without LANG works fine, but when extracted with LANG=ja_JP is doesn't extract correctly
  You can see this by just running `7z l Masicsstory.zip` vs `LANG=ja_JP 7z l Masicsstory.zip` and notice the second listing loses all subdirs and ends up clobbering outputs and just produces 1 output file
  Problem is I couldn't figure out how to get 7zz to behave properly with i18n charsets. It doesn't seem to care about LANG env var? I found a -scs switch flag, but not sure it's mean for this purpose: file:///usr/share/doc/7zip-24.08/html/MANUAL/cmdline/switches/charset.htm
  Additionally 7z from p7zip might support other features and things that 7zz doesn't? I'd need to fully test all this out. For now, meh.

* Adopt these Filemaker Pro tools for ~9,771 unique files: https://github.com/evanmiller/fmptools
  Right now I just 'strings' them which is good enough to find via a search but doesn't give much idea on layout/etc

* Add 'proper' AskSam support for the ~460 files: https://discmaster.textfiles.com/search?format=askSamDatabase
  https://preservation.tylerthorsted.com/2024/01/26/asksam/
  Right now I just have it as a 'simple' file using strings, of which I already have some samples for

* Add POVRAY rendering support for the ~1,706 unique files (see the extensive notes in povRay.js)

* Add moRay support for the ~2,300 unique files (sat on top of POV-RAY, see format moRay.js for notes): https://discmaster.textfiles.com/search?format=moRay&dedup=dedup

* Improve image/amosPicturePacker support for the ~57 unique files: https://discmaster.textfiles.com/search?format=amosPicturePacker&dedup=dedup
  It currently is only supported by abydos and it doesn't always get it right.
  It also doesn't associated .pal palette files: https://discmaster.textfiles.com/browse/1106/CU%20Amiga%20Magazine's%20Super%20CD-ROM%2007%20(1997)(EMAP%20Images)(GB)(Track%201%20of%208)[!][issue%201997-02].iso/cucd/readers/readers_games/animal_pairs/pictures
  Perhaps get deark to add support for this format.

* Add BitRock installer support for the ~20 files: https://discmaster.textfiles.com/search?q=%22BitRock+Installer%22&qfields=name&qfields=t&format=xml
  I tried using this extractor: https://gist.github.com/mickael9/0b902da7c13207d1b86e
  But failed to get it to extract anything. See my progress and overlay ebuilds in sandbox/app/bitrock-unpacker/

* Add archive/innoSetupArchive support for the ~300 files: https://discmaster.textfiles.com/search?format=innoSetupArchive
  See about converting this Java code to javascript to extract them.
  Right now it wants a specific CD/DVD, but maybe it's flexible enough to handle any archive file like: setup*.bin  https://discmaster.textfiles.com/browse/6096/UFO_OfficeGames_DVD.iso

* HFS+ CDs do not currently expose mac file type/creator codes (as uniso just mounts them with -t hfsplus)
  In fact, if they have resource forks, I bet I'm entirelly skipping them.
  I don't have clear examples of an HFS+ CD with type/creator codes and resource forks, but here are 2 random HFS plus CDs
  	https://discmaster.textfiles.com/browse/22754/3DW_111.iso
  	https://discmaster.textfiles.com/browse/31512/ART_153.iso
  To get the content may be tricky. hfsplusutils might work, but I had real issues mounting the ISOs with it.
  Probably better to try using hfsexplorer


/--------------\
| Low Priority |
\--------------/
* Potentially update GIMP from 2.99 to 3.00 (there are likely considerable python API changes, claude and perplexity both highlighted a lot, but I should find an actual blog post/changes news with actual API change info)

* For anything dexvert uses "winedump" for, could get PE section names with objdump -h or llvm-objdump -h or something like that, probably added as another "meta" program.
  Could look at `winedump -x` to see what other info is available, from non 32-bit exes like:  https://discmaster.textfiles.com/view/27509/aktief3.zip/aktief3/DOWNLOAD/SHOCKW/SHOCK16.EXE
  Then update injest to grab these and add them to the detections field in a similar way that I do for Mac type/creator
  Then test by reprocess item 1 or another test item (test with the exes first manually to see what shows)
  Will need record down every itemid currently processing or already processed.
  Then need to create code that can go through all of those itemids, find all identified exe files (including the other formstids like windowsSCR etc) and ensure the needed programs are installed on discmaster 2 and have it be able to get new detectin data and "append" it to that field in the index data file and then "update" the existing manticore entry and then test this manually on 1 or 2 items (backup the index files first!) and then remove that itemid from the list that needs processed.
  Finally I'll need to process all items in the list. Need a way to multiprocess it, look at existing discmaster utils to see if I have anything similar
  Lastly, see if any section names match 'matrosch' and then reply to: https://discord.com/channels/1140706605789368492/1140706606775025786/1355543937535836190

* InstallShield cab extraction can be problematic as unshield doesn't work correctly with everything.
  For example CABS from: https://archive.org/details/250TCF
  They take up 653MB of space but only 62MB is extracted.
  Possible options: https://community.flexera.com/t5/InstallShield-Knowledge-Base/Installshield-Setup-exe-Command-Line-Parameters/ta-p/4270
  Or maybe try installing Install Shield authoring itself to see if I can open them or build an extractor or something:
	https://archive.org/details/install-shield-6.2-pro-std.-7z
	https://archive.org/details/installshield1150premier

* Audio not getting extracted from some multi-track ISOs: https://discmaster.textfiles.com/browse/517

* ISOs/disk images I was unable to process:
	Just a .bin file:
		https://archive.org/details/A.R.T.S._Episode_Number_6_CDR
	These don't convert for some reason, they both appear to be Mac CDs
		https://archive.org/details/800_jeux_pour_mac		This one has an extra 16 bytes at front, removing it doesn't fix it, but did allow UniExtract to extract a TOAST partition, but couldn't process that at all either
		https://archive.org/details/Lex-C-RomSharewareExpress	no idea on this one
	Raw mac partition dumps:
		https://archive.org/details/apple-r-p-lib-internal-v-1.0
		https://archive.org/details/apple-r-p-lib-internal-v-2.0
		https://archive.org/details/apple-r-p-lib-reseller-v-1.0_202007
	Could not figure these out (may be bad rips)
		https://archive.org/details/cdrom-megabytemonster
		https://archive.org/details/CitroenC5-2001
		https://archive.org/details/LionShare
		https://archive.org/details/cdrom-megabytemonster
		https://archive.org/details/Royal_Tyrrell_Museum_Virtual_Tour_2003_WIN98
		https://archive.org/details/Lex-C-RomSharewareExpress
		https://archive.org/details/Macworld_CD-ROM_April_1995
		https://archive.org/download/Apple_Developer_Discs_1989-2009/1992/ADC%20Developer%20CD%20%281992-11%2C%2012%29%20%28%27%27Wayne%27s%20Gworld%27%27%29_mdf.rar
	Couldn't determine filesystem type for these compuserve drive images: https://archive.org/details/2015-05-compuserve-raw-disks

* Adopt Dragon Unpacker program to extract more game assets: https://www.elberethzone.net/en/dragon-unpacker-supported-games.html

* Make my own director ripper on linux that operates on the raw files directly. Would write my own code entirely, likely deno based.
  Look at macromediaDirector.js format for notes on other converters for a head start. May be able to just massage SCUMM into doing it
    Could consider contacting the folks who are committing to the SCUMM dierctor code and asking them directly
    Ask how hard it would be to leverage the SCUMMVM code to create a CLI tool that when given any director file can extract all assets
	Including converting all image formats to PNG (or something similar), audio to WAV, lingo scripts, text, etc
	Possibly this person on mastodon/ivory: @felsqualle@manitu.social
  After it fully extracts my current test files, then re-process items that have failed to process some macromedia director files.
  Write a script to search injestion alerts for something like 'magic archive/macromediaDirector' for example: http://discmaster.textfiles.com/admin/item?itemid=10456

* Look into adding Atari ST VT-52 text/ansi art support: https://github.com/Sembiance/dexvert/issues/27

* Would be nice to convert additional unreal UTX formats, such as textures: http://discmaster.textfiles.com/browse/542/EJV8_CD1.ISO/ejv8-cd1/data/shoot/Unreal%20Tournament%202003/UT%202003.exe/Textures
  The 'real' solution is probably to load up a period-appropriate UnrealEngine editor in winxp and have it import the UTX file itself and then export all the contents within
  Similar to how MacromediaDirector does it.
  Extra bonus points if I use UnrealEngine itself to create a 'tool' that can automatically open a .utx, read in all assets and convert them automatically to output files

* All the 'Softdisk for Windows' SETUP.EXE files are custom unpackers, so would be nice to extract the files from them properly
  I of course would need to properly identify them as something I can work with, don't see an easy way to do that.
  Maybe see if I can just 'run' them and install to c:\out or something

* Look at supporting Pro 24 sng's via hatari on win 7 (see notes in music/pro24SNG.js  NOTE: It's more than just running a program)
  Then re-process those in: https://discmaster.textfiles.com/browse/10762/Atari%20Forever%203.zip/Atari%20Forever%203.iso/PD_THEMA/MIDISONG/*/24_SNG/*
  Other items may also have these songs (especially the other Atari Forever cds) but would need to do some searches/checks
  These are the possible prefixes I've found, so look for these in 'detections':
	0006AAD4
	0006729A
	0008FE2C
	0007D950
	00076D20
	00078C80

* Binwalk v3.0 is an entirely different program now, different flags, different output, so consider creating a 'binwalk3ID' identify program and checking it against all current stuff
  It's slotted in Gentoo so can have both 'binwalk' and 'binwalk3' executables/packages installed. Would need to update the printUtilSteps to explicitly install both

* 3D Studio ASE support could be improved with textures. Parse out the *BITMAP lines, look in current dir and parent dir and subdirs
  Noesis certainly supports loading these textures (I tested this), dunno if other converters do or not
  https://discmaster.textfiles.com/view/19374/Logick%C3%A9%20hry.iso/hry/Becher%20Chess/meshes/knight.ASE?text

* IsoBuster has had several updates since I last installed it and now supports more formats: https://www.isobuster.com/news/

* Consider adding other detectors:
  - Try latest magika model release: https://github.com/google/magika/tree/main/assets/models/standard_v2_1
	See if I already have legacy code for it or not. Ensure it runs in CPU mode, and probably as a webserver I can send reqs to
	Then run it against all samples using my util script
	Then file bugs for misdirections 
  - Try adding puremagic 'detect' program: https://github.com/cdgriffith/puremagic
	After, run: cd util && dra checkDetector.js --program=puremagic --format=image/p   (then later, --format=all)  

* Create a Duke Nukem 3D ART extractor/convertor, see sandbox/wip/dukeART
  The BAFed jar (java -jar BAFed.jar) can load and show the ART files, with animation, but can't really export
  The 'test.py' script comes from: http://justsolve.archiveteam.org/wiki/ART_(Duke_Nukem_3D)
  That link also has a brief overview of the format.
  The test.py script claims it can extract the files, and it does extract SOME of the PNGs from: TILES005.ART
  But I could use that as the starting point for my own deno based script. It should also create animated GIFs for animated tiles
  Can convert these: http://discmaster.textfiles.com/browse/849/boot-disc-1996-08.iso/content/demos/games/duke3d/duke3d.grp
  http://discmaster.textfiles.com/browse/98/EPISODE_17_SEP_1995.iso/demos/tekw
  http://discmaster.textfiles.com/search?q=TILES000.ART&qfields=name
  Have dexvert match *.art extension, with auxFiles req that palette.dat exists in dir and idCheck that file starts with 0x01 00 00 00

* Improve 'fragile' formats (these are very sensitive and sometimes convert OK, sometimes don't. May be CPU load related, may be something else):
  archive/halfLifeModel					Crowbar program seems to be sensisitve
  archive/hypercard						Sometimes certain cards/bitmaps don't render
  archive/windowsResource				Converter program is sensitive, would like to find a better resource ripper, maybe even code my own
  audio/downloadableSoundBank			Sometimes not all .mp3 files are produced (shell.dls)
  document/pageMaker					The program (especially pagemaker7) may be sensitive as often it will end up converting with older converters
  font/amigaBitmapFont					Program Fony appears to be sensitive, sometimes it converts, sometimes not.
  image/harvardGraphicsChart			When running tests, I only get an output image about 50% of the time
  music/smus							Sometimes works, sometimes doesn't. aboutmodern.smus is particularily sensitive

* Now that I emulate a real sound card with 86Box, I may be able to support music/famiTracker in winxp. See note

* Consider updating the b3d plugin script for blender: https://github.com/joric/io_scene_b3d/issues/11  &  https://github.com/joric/io_scene_b3d/tree/4.0

* Add all formats the Konvertor supports, warning, it's a LOT (copy-paste the list of each category from programs_formats.txt)

* Contact @Skyplayer37 on twitter to see if they are up for updating their blender code to work with blender 4.0
  Github code (backed up to sandbox/app/1993-Model-Importer): https://github.com/Skyplayer37/1993-Model-Importer
  3D files: https://discmaster.textfiles.com/browse/2020/The%20640%20Meg%20Shareware%20Studio%20CD-ROM%20Volume%20II%20(Data%20Express)(1993).ISO/graphics/3d25.zip
  Original Post: https://twitter.com/Skyplayer37/status/1593440006261321729?s=20&t=ZJ4V5KTiA_rfV0YHnjJdYg

* Look at these blog posts and see about adding support for some of those formats. At the very least link to these articles from the notes field of each format:
  https://codecs.multimedia.cx/2024/04/a-quick-look-at-gold-disk-animation/
  https://codecs.multimedia.cx/2024/04/a-look-at-more-formats/
  https://codecs.multimedia.cx/2024/04/another-quick-look-at-two-amiga-formats/

* Try out these converter programs to see if they support any additional formats (temporarily test each on a VNC win2k/winxp):
  Micrografx Graphics Suite (check out Picture Publisher, Designer and Simply 3D): https://winworldpc.com/product/micrografx-graphics-suite/2
  Micrografx Draw: https://winworldpc.com/product/micrografx-draw/60

* There was a product called Macromedia Authorware (later Adobe Authorware) that could create interactive e-learning stuff
  It was also oftne used for interactive stuff on CD's, such as: https://discmaster.textfiles.com/view/4/100%20Fonts.iso/FONTMGR/Demos/PtxDemo.exe/Finaldem.exe
  It could be compiled to an .exe and supported both mac and pc.
  About 25 or so unique ones can be found on discmaster: https://discmaster.textfiles.com/search?q=%22Authorware+file%22&qfields=filename&qfields=ext&qfields=content&family=text&formatid=txt&dedup=dedup
  There may be more, as the search term I used may be pretty specific to the particular version 4 that the above example is from
  It would be great if the authorware content could be 'extracted' from the .exe file somehow (probably protected/compressed) and then further extracted into the original media assets

* It might be fun to write a parser for this obscure format: https://breakintochat.com/wiki/Instant_Graphics_and_Sound_(IGS)
  It's documented pretty well in sandbox/app/IGSED25.ZIP  -> MODEMS/MOD_A2L/IGSED25/IGS217.TXT
  It also does sound and music though, so maybe this is more of an archive producing both images and audio? or maybe a video?

* So meshlab (https://github.com/cnr-isti-vclab/meshlab) uses vcglib which has support for these 3D formats: PLY, STL, OFF, OBJ, 3DS, COLLADA, PTX, V3D, PTS, APTS, XYZ, GTS, TRI, ASC, X3D, X3DV, VRML, ALN
  Sadly the version in Gentoo as of Mar 2024 is 4 years old and attempts to compile it myself yielded a lost afternoon and lots of frustration

* Freecad (already in portage) has several formats: STEP, IGES, OBJ, STL, DXF, SVG, DAE, IFC or OFF, NASTRAN, VRML, FCStd  (from https://wiki.freecad.org/Feature_list)
  But it pulls in 40 other packages, some of them quite large including additional slotted versions of CLANG. Yuck. Pass for now.
  It also has additional addons' that support other formats from: https://github.com/FreeCAD/FreeCAD-addons

* Add DOS printing support to DOSBox with a patch from: https://sourceforge.net/p/dosbox/patches/?limit=250
  I've downloaded the patch and the required fonts.zip to sandbox/app/virtualPrinter/
  Once I have that I could support certain formats like:
	document/dartHypertext
	document/envisionPublisherDoc
	document/ibmStoryboardDocument

* Create a util/openVNCWindows.js <host> that will dynamically determine how to open all the VNC windows
  Probably update wine and os to record down in a ram dexvert file which VNC ports are being listened on
  If host is omitted or is localhost then open locally.
  If host is a remote host then use vncRemote command

* Would be nice to take this Java program and make a CLI conversion program from it's code (git cloned a copy into sandbox/app/): https://github.com/kreativekorp/powerpaint
  I submitted an issue on their GitHub asking if that would be possible, or at least some help in which classes/methods to use to make it happen
  Go through formats it supports (see programs_formats.txt) and try them out against dexvert test cases and consider adding to dexvert

* This program is able to identify, extract and convert hundreds of visual novel file formats: https://github.com/morkt/GARbro
  Including archive/repiPack
  It's written in C# .net but targets an old version 4.6. It also references several DLLs that they don't provide.
  The author has said that they are proprietary and he doesn't care that it won't compile anyhere else. The main build is years old.
  There is no working Console support, but there is a pull request that tries to fix that: https://github.com/morkt/GARbro/pull/394/commits   (https://github.com/Bioruebe/GARbro/tree/2112bde1cc13eb817b8d541c3bcc7a68c4f71883)
  I've saved the full source code (as of Feb 2024) WITH the pull request merged to: sandbox/app/GARbro.tar.bz2
  I could try using the new ebuild.txt C# tips to create a working ebuild... maybe.
  With compilation not being an option and the build being so old (it didn't work right under wine anyways, I tried) just the code is useful
  What needs to happen is I need to examine the code closely, see how it 'detects' formats, 'extracts' and 'converts'
  Then I need to make a new .net mono project and slowly bring over the code, 1 file at a time, writing new API stub backings as needed
  That's a TON of work. So while it would be awesome to detect these formats and handle them, it's on the back burner for a while
  If I do do it, get 'detection' working first as another 'detect' program. Then get extraction and use these samples:
	test/sample/unsupported/visualNovel/
	test/sample/archive/fat12/*/*
  	https://archive.org/details/pc-98_20230120
  	https://www.pc98.org/main.html
	http://discmaster.textfiles.com/browse/1123
	https://strangecomforts.com/the-strange-world-of-japans-pc-98-computer/
	https://archive.org/search?query=visual+novel&and%5B%5D=mediatype%3A%22software%22
  	Old IADL (http://iadl.retromission.com/items?collectionid=cd-roms&collectionid=cdrom_contributions&collectionid=cdromimages&collectionid=cdromsoftware&collectionid=%40asromix&collectionid=%40gingerbeardman&collectionid=%40iamxray&collectionid=%40pascal_of_irate&collectionid=%40sembiance&collectionid=%40shivashaw&collectionid=adultcdroms&collectionid=ftpsites&collectionid=softwarecapsules&collectionid=softwarelibrary_mature&subject=visual%20novel&title=&priority=999&minfiles=0&maxfiles=0&minsize=0&maxsize=0&limit=1000)

* See if I can detect and extract the compressed files in sandbox/fail/unsupportedCompression/*
  Maybe something from: https://www.sac.sk/files.php?d=7&l=

* Add OS X support, running under something like vbox/vmware.
  Then add programs:
	Graphic Converter (https://www.lemkesoft.de/en/products/graphicconverter/key-features/import-and-export-formats
	First test on my real mac to see if I can convert files via CLI (check PCX, AOL Art, etc) (see Help->CLI Commands)
	If CLI works then try getting it working in a virtual machine of some sort, something more portable than QEMU
	To run the supervisor.sh script on boot: https://www.karltarvas.com/2020/09/11/macos-run-script-on-startup.html
  Add format support:
	archive/sparseImage

* Add Classic MacOS support, probably use this software: https://macintoshgarden.org/apps/oneclick
  Probably spin up fresh mac instances each time with a custom HD image with the script and in/out folders pre-prepared
  After it's working, I can then support 'Graphic Converter' and these formats:
	These seem to be Disk Copy 5/6, which I may be able to extract/convert with: http://macintoshgarden.org/apps/disk-copy-6
	  https://archive.org/details/GigaROM2.0.img   (https://discmaster.textfiles.com/admin/item?itemid=13263)
	  https://archive.org/details/InfoMac5Disk1.img
	  https://archive.org/details/InfoMac5Disk2.img
	  http://discmaster.textfiles.com/view/5525/Apple%20Media%20Image%20Disc%20Vol.%205.smi.bin

* Add RISC OS support, with one of these emulators:
	https://www.marutan.net/rpcemu/index.php
	http://arcem.sourceforge.net/
	http://b-em.bbcmicro.com/arculator/
	http://www.virtualacorn.co.uk/product.htm  (only runs on Windows)
	http://www.riscos.com/shop/products/106/index.htm  
  Will want to find CineWorks application and probably stick to version 3.x of RiscOS: https://www.riscosopen.org/forum/forums/5/topics/248?page=2
  Then add support for:
	unsupported/audio/audioWorksSoundSample
	video/acornReplayVideo
  More samples from:
	https://archive.org/details/cine-clips
	https://archive.org/details/acorn_replay_collection
	https://archive.org/details/cdrom-riscos-clipart
	https://archive.org/details/cdrom-riscos-risc-disc-1

* Add Old 32bit Linux support then add (see notes for each format):
  music/beRoTracker	(no files actually detected on discmaster)
  music/synderSNG  	(VERY weak magic. no ACTUAL songs detected on discmaster, all are just false positives)

* Learn how to crack old windows programs, specifically the decode.exe's from:
	https://discmaster.textfiles.com/browse/6924/PCL_19.iso/charme/hard
	https://discmaster.textfiles.com/browse/6923/cd.iso/charme/hard
	https://discmaster.textfiles.com/browse/6928/CDROSE2.iso/hard
    https://discmaster.textfiles.com/browse/16063/PC%20Loisirs%20-%20Supplement%20Interactif%20No.%2022%20(France).7z/PC%20Loisirs%20-%20Supplement%20Interactif%20No.%2022%20(France)%20(Track%201).bin/charme/hard
  These are 16bit Windows 95/98 programs. So using W32Dasm or OllyDbg doesn't work well because those only handle 32bit code.
  Should be able to find some cracking tutotorials from back in the day and go through them. Idea is find the assembly where the password button checks validity and crack that to just be NOP or something or change from BEQ to BNE or something
  Then add support for these files. Should be fun :)
  Try asking an LLM for help on disassembly and finding the code to patch it out, etc. Might need to use an 'uncensored' LLM for this.
  Try grok-2 on X, but can also try:
	https://sebastian-petrus.medium.com/someone-has-mad-an-uncensored-version-of-qwq-32b-preview-and-it-is-awesome-f64769a60d03
	which might be available here: https://openrouter.ai/qwen/qvq-72b-preview

* Create dexvert.com with a 'Browse' button that allows you to upload files to convert.
  Bonus points if I make a quick dirty 'dexvert.sh' bash script that folks can use that will convert via wget from CLI via dexvert.com
  WARNING! I need to assume that it will be exploited since I run so many programs, many of which likely have exploits.
  So I will want to research how to run programs within some sort of jailbreak, or leverage the docker image with multiple instances

* Add rendering of previews of full game maps supported by 'gamemap': https://github.com/Malvineous/libgamemaps
  Research them here: https://moddingwiki.shikadi.net

* Could incorporate a new detectory, the DOS based identification program sandbox/app/idar215.exe (self extractor) http://fileformats.archiveteam.org/wiki/IDArc
  Due to the overhead with DOSBox, would want to use 'dosemu2' to run this directrly from the linux console: https://github.com/dosemu2/dosemu2
  I got it to install and compile, but the freedos (fdpp) linking wasn't correct yet and it failed to run IDARCH.EXE

* Add OS/2 support by either using OS/2 Warp 4.5.2 (winworld) on 86Box or by using ArcaOS (was blue lion) in vbox/vmware: https://www.youtube.com/watch?v=Utse8P_L8k0
  NOTE: Already started this a bit, got it installed into 86box and networkign working. Find it in sandbox/legacy/os2/
  Next step would be to create a REXX script (see chatgpt history) that would do what supervisor did. Wget is available for OS/2 from Hobbes
  I stopped because it takes 2x to 3x times longer to boot into OS/2 and there are only 4 formats that would benefit, only 1 would be automateable now and so meh.
  Then add format support for:
	archive/os2FTCOMP		(117,604 files on discmaster2 (56,280 unique))
	image/pmDraw			(101 files (33 unique))  (No known converter, would need Auto-It like functionality for OS/2 to control GUI)
	archive/iconHeaven		(702 files on discmaster2 (149 unique)) (WARNING: No known converter, even on OS/2)
	document/os2Help		(56,493 files (11,240 unique))	(Already suport it pretty good) (maybe more converters maybe: https://hobbes.nmsu.edu/?path=%2Fpub%2Fos2%2Futil%2Fconvert)
	Find sample files for text/rexxAdventureSavedGame (since rexx-adventure is an OS/2 thing)

* There are several 'detected' installer 'magic' in the 'exe.js' format, I could look into each of these and write extractors for them

* xbox content can be better extracted with: https://github.com/multimediamike/xbfuse


/----------------\
| Probably Never |
\----------------/
* Could extract music from ZZT files with ZZMTRIP.EXE in DOS: https://museumofzzt.com/file/view/zztmplay20/
  Then I could modify this javascript code to produce a WAV from the ripped ZZM file: https://github.com/nicolebranagan/zzmplayjs
  I tried doing this in Jan 2025, but 2 issues. First, the ZZMTRIP.EXE program took like 2 full minutes on "Code Red" ZZT file
  So I'd need to get that sped up, perhaps I could update dosbox to have a dynamic config that I could run at 200% or 500% speed
  Second, the zzmplayjs code wouldn't actually load the ZZM file and gave an error I submitted an issue: https://github.com/nicolebranagan/zzmplayjs/issues/2

* https://github.com/32bitkid/sci.js/tree/main/apps/scibud
  Utilize this to convert/extract SCI0 pics from Sierra SCI files.
  The author said this about detection: the most simplistic heuristic for SCI games would be the existence of a RESOURCE.MAP file with one or more files "pack", like RESOURCE.001. There are other checks/fingerprinting to use to be more specific, but that's usually a pretty good sign that it's an SCI game.
  However, due to the fact that 99% of the CD's are actually just the installers and they are often split across files, I wasn't able to get the script to work well, as it's designed to work on the files after they've been installed, requiring things like RESOURCE.MAP and RESOURCE.001, etc. supporting files

* Use a doom2vrml program to make doom levels browseable: http://discmaster.textfiles.com/browse/6095/WIN95_09962.iso/vrml/dm2v-10.zip  or  http://www.ocnus.com/doom.html
  I tried DM2VRML.EXE a little bit, it crashes a lot. Also, I had trouble locating Doom 1 WADs, but found lots of DOOM 2 wads.

* Add this detection program: https://github.com/google/magika
  It only detects a small handful of file formats, more modern ones too (v2 game out in 2024 and has a few hundred, but still not many)
  For that one, I'll need to spin up a server in dexvert that runs in the background as python and responses to web requests
  Make sure I also put it on info.txt App Updates section

* Pay someone to add more formats to FFMPEG (gl/dl/ANIM/etc) or to improve existing formats: http://www.ffmpeg.org/consulting.html

* Consider switching away from DOSBOX and use an authentic MS-DOS installation under 86Box
   Pro: Compatability with some dexvert/dos/* programs that didn't work under dosbox (of which I don't know of any). Feels cleaner.
  Cons: Would need to solve video recording & keyboard control (both of which I wrote custom code patches to DOSBOX to implement)
  I could maybe add similar code to 86Box, but that would be harder to control from 'within' dos.
  It's probably not worth doing since I can't think of many 'benefits' and what I have with DOSBox "works ok"

* Add 3DO support. Ideally via mount using dexvert/sandbox/app/operafs but I'd need to update that code to compile against modern linux kernel
  Other 3DO extractor programs: https://forum.uqm.stack.nl/index.php?topic=3535.0
  Some additional OperaFS programs: http://altmer.arts-union.ru/3DO/3do_utils.htm

* Try and get support added to linux kernel for mounting CDI images. Seems like a tall order.
  Could ask on IRC OFTC #kernelnewbies and ##linux on freenode about where I could find someone who could do this, and maybe pay them to do it
  https://www.isobuster.com/help/cd-i_and_vcd
  https://encyclopedia2.thefreedictionary.com/Green+Book+CD-ROM
  https://www.lscdweb.com/data/downloadables/2/8/cdi_may94_r2.pdf
  See some tools in sandbox/app/CD-i Image Decoding Tools rhdn.zip
  Additional tools for CD-I from here (including animation stuff): https://archive.org/details/various.cd-i.utilities.3.5hd.os9

* Create native C nodejs module for imagemagick/recoil and other libs (abydos, etc) for speed. Example existing image magick one: https://github.com/elad/node-imagemagick-native
