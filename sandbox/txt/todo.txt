/--------------\
| TOP Priority |
\--------------/
* Now sync upload to chatsubo

* Do chatsubo system wide update -upDN world
  Also do: emerge grotag

* Now get dexserver and test/testdexvert.js working 100% on chatsubo

* Now start working on test/testid.js (start with image/pcx).
I do NOT actually have to manually 'record' anew for every file format, existing data is same.
So I should just be able to test entire families
./testid --format=image
Then fix an specific formats and record just those formats
If for whatever reason I do need to do it by hand, I wrote a script to help, just run util/testids.sh

* Ensure both testid and testdexvert both pass 100%

* Now make sure test/testid.js works 100% on chatsubo

* Make a src/app/dexbrute.js that will run a given format for each and every program with a custom output path like /output/programid/ and will remove empty directories and output a final result too of what worked and what didn't

* Update lobe with new garbage and notGarbage files then re-run image test, see how it changes


/---------------\
| High Priority |
\---------------/
* Add additional conversions with 'libvips' (see CLI conversion) https://www.libvips.org/API/current/using-cli.html

* Add support for these formats:
  music/renoise			Buy renoise for linux and use that to convert to MP3: https://www.renoise.com/products/renoise   (remove from testdexvert exceptions after)
  music/svarTracker		https://web.archive.org/web/20160818081932/http://www.svarsoft.com/download/svartracker_1_22_free_inst.exe
  music/cms  (LOOK at the dosbox source code itself, see how it handles it, probably not easy to extract, so maybe add a recordSound flag to dosbox the same way I do recordVideo flag that will output WAV when ran)
  music/graoumfTracker.js
  music/famiTracker.js
  audio/psf
  Other music tracker formats?

* Add WavPack support (sox should work) (for sample files: `wget http://www.rarewares.org/wavpack/test_suite.zip`)

* Get the 256C 'fractalImageFormat' files working. Will need to track down a different converter program. There is a photoshop plugin listed on the webpage, could use that with an older photoshop under winxp

* Find better support for Windows Clipboard .clp files, right now they all convert quite poorly

* Add better hypercard support. Right now stackimport segfaults on almost every stack and only extracts some of the files
  Write my own deno based extractor based on the format specs: https://github.com/PierreLorenzi/HyperCardPreview/blob/master/StackFormat.md
  Reference of course stackimport and HyperCardPreview code as needed to see how to handle any particular conversion

* Add OS/2 support by using ArcaOS (was blue lion): https://www.youtube.com/watch?v=Utse8P_L8k0
  Then add format support for: archive/os2FTCOMP and archive/os2InstallPackage and archive/iconHeaven and others (see unsupported notes)
  Then process the OS/2 CDs I have

* Add 3DO support. Ideally via mount using dexvert/sandbox/app/operafs but I'd need to update that code to compile against modern linux kernel
  Some additional OperaFS programs: http://altmer.arts-union.ru/3DO/3do_utils.htm


/-----------------\
| Medium Priority |
\-----------------/
* See about adding these formats:
  https://ftp.modland.com/pub/modules/Ad%20Lib/
  https://ftp.modland.com/pub/modules/Spectrum/

* The program 'Master Tracks Pro' (to support music/masterTracksPro of which I forgot to add sample files) only works in Vista or later.
  I could create another VMWare image with Vista and use it to run it, but seems like overkill for just 1 program for 1 format.
  If I choose to do this, the app is in sandbox/app/master_tracks_pro_full.exe and S/N is in email.

* Figure out why this "eats" my input: test/testdexvert.js --format=music/sid

* Try this as alternative to lobe, see how it does: https://teachablemachine.withgoogle.com/

* GoADF 4.0 will add support for mounting an ADF file via an arexx port. Add this to adfOFS and adfFFS when added: http://www.bitplan.pl/goadf/download.html

* After retromission is pretty far along, grab a copy of every single .instr and .ss file found and stick em into music/smusInstruments (would have to check for naming collisions (where the files have different checksums) and potentially support that if there are a lot.
Then the conversion app would have a much higher chance at being able to convert the files.
I could then create a retryFiles.js that would find all items and files that have processed false that match a given criteria (magic probably) and the re-run processFile for that item (which would likely mean breaking processFile fun into its on file, that shouldn't be too hard.)
There are likely to be filename collisions. I should also preserve those from the original software over those just found in the wild

* Create a NodeJS based parser that can parse internet e-mail/news formats to verify that they are indeed valid files
  http://fileformats.archiveteam.org/wiki/Internet_e-mail_message_format
  See samples in: sandbox/samples/mail_news/


/--------------\
| Low Priority |
\--------------/
* Improve ILBM animations. Probably need to use an amiga program under QEMU and export as either GIF or raw PNG frames
  Abydos author mentioned he would like to improve the animations
  PPaint can save as animated GIF, but dunno if it handles color cycling: http://www.ppaint.com/
  Maybe also check out Delxue Paint itself to see if it has any export capability: https://en.wikipedia.org/wiki/Deluxe_Paint

* Support ANSI Music files: http://artscene.textfiles.com/ansimusic/

* Figure out what format to create '3D' files to. Not even sure what software can handle opening things like VRML. Maybe start there and see what they can 'export' to. Maybe STL? Or maybe just 'render' each 3D file to a PNG and call it a day.

* Add support for iffCTLG. Looks pretty easy to reverse engineer.
  Use this tool, looks fun to use: http://kaitai.io/  (or just use 010 Editor templates, see dexvert/010_templates/)
  As that tool looks like I can take the result and use it directly within dexvert. Woot.
  For inspiration help: http://formats.kaitai.io/riff/index.html

* Get other formats reverse engineered
  Goal: Produce open source code (any language) that can run on Linux that can take an input file and produce one or more output PNG files
  Could also try posting on reddit r/ReverseEngineering/ or r/INAT
  Maybe offer a $5,000 bounty on one of the sites linked: https://en.wikipedia.org/wiki/Open-source_bounty
  Alternatively I can post on reddit.com/r/ReverseEngineering  also ask where else I might post such an offer
  Could also contact devs directly:
  https://www.upwork.com/o/profiles/users/~0105d5841f6a52bb2e/
  https://www.upwork.com/o/profiles/users/~0168f82b6f4a79d7e0/
  https://www.upwork.com/o/profiles/users/~01ca8e53b73db18365/
  https://www.upwork.com/o/profiles/users/~017b879ebc3785c685/
  - Second Nature SNX 	http://fileformats.archiveteam.org/wiki/Second_Nature_Screensaver_Graphic
  - AOL Art 			http://fileformats.archiveteam.org/wiki/ART_(AOL_compressed_image)

* Ask on IRC OFTC #kernelnewbies and ##linux on freenode about PAYING someone to add support to linux kernel for mounting CDI images:
  https://www.isobuster.com/help/cd-i_and_vcd
  https://encyclopedia2.thefreedictionary.com/Green+Book+CD-ROM
  https://www.lscdweb.com/data/downloadables/2/8/cdi_may94_r2.pdf
  See smoe tools in sandbox/app/CD-i Image Decoding Tools rhdn.zip

* Create dexvert.com with a 'Browse' button that allows you to upload files including a REST API
  WARNING! I need to assumed that it will be exploited. So I will want to run dexvert on virtual machines. Not sure if I can run virtual machines like windows from WITHIN a virtual machine running gentoo+dexvert.... hrm...


/----------------\
| Probably Never |
\----------------/
* Create native C nodejs module for imagemagick/recoil and other libs (abydos, etc) for speed. Example existing image magick one: https://github.com/elad/node-imagemagick-native

* Create a 'dexvert-remote' NPM  package that will provide the same 'dexvert inputFilePath outputDirPath' command line tool but it will upload the file to the website and then download the results all seamlessly (with progress bar)

* Convert bitmap fonts to more usable vector fonts by trying to "autotrace" the fonts, or utilize a pro tool like: https://www.fontlab.com/font-editor/bitfonter/   or   https://www.fontlab.com/font-converter/transtype/

